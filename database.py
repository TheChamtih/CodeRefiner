import os
import psycopg2
from psycopg2.extras import DictCursor
from config import MAIN_ADMIN_ID

DATABASE_URL = os.environ.get("DATABASE_URL")

def get_connection():
    """Returns a database connection."""
    return psycopg2.connect(DATABASE_URL)

def init_db():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    conn = get_connection()
    cursor = conn.cursor()

    # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS users (
            id SERIAL PRIMARY KEY,
            chat_id BIGINT NOT NULL,
            parent_name TEXT,
            phone TEXT,
            child_name TEXT NOT NULL,
            child_age INTEGER NOT NULL,
            child_interests TEXT
        )
    ''')

    # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –∫—É—Ä—Å–æ–≤
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS courses (
            id SERIAL PRIMARY KEY,
            name TEXT NOT NULL,
            description TEXT,
            min_age INTEGER NOT NULL,
            max_age INTEGER NOT NULL
        )
    ''')

    # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –ª–æ–∫–∞—Ü–∏–π
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS locations (
            id SERIAL PRIMARY KEY,
            district TEXT NOT NULL,
            address TEXT NOT NULL
        )
    ''')

    # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –∑–∞–ø–∏—Å–µ–π –Ω–∞ –ø—Ä–æ–±–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS trial_lessons (
            id SERIAL PRIMARY KEY,
            user_id INTEGER NOT NULL,
            course_id INTEGER NOT NULL,
            location_id INTEGER NOT NULL,
            date TIMESTAMP NOT NULL,
            confirmed BOOLEAN DEFAULT FALSE,
            FOREIGN KEY (user_id) REFERENCES users(id),
            FOREIGN KEY (course_id) REFERENCES courses(id),
            FOREIGN KEY (location_id) REFERENCES locations(id)
        )
    ''')

    # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS admins (
            id SERIAL PRIMARY KEY,
            chat_id BIGINT NOT NULL UNIQUE
        )
    ''')

    # –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    cursor.execute('SELECT COUNT(*) FROM admins WHERE chat_id = %s', (MAIN_ADMIN_ID,))
    if cursor.fetchone()[0] == 0:
        cursor.execute('INSERT INTO admins (chat_id) VALUES (%s)', (MAIN_ADMIN_ID,))

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ª–æ–∫–∞—Ü–∏–∏, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    cursor.execute('SELECT COUNT(*) FROM locations')
    if cursor.fetchone()[0] == 0:
        locations = [
            ("–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π", "—É–ª. –õ–µ–Ω–∏–Ω–∞, –¥. 42"),
            ("–°–µ–≤–µ—Ä–Ω—ã–π", "—É–ª. –ü—É—à–∫–∏–Ω–∞, –¥. 10"),
            ("–Æ–∂–Ω—ã–π", "—É–ª. –ì–∞–≥–∞—Ä–∏–Ω–∞, –¥. 25"),
            ("–ó–∞–ø–∞–¥–Ω—ã–π", "—É–ª. –ú–∏—Ä–∞, –¥. 15"),
            ("–í–æ—Å—Ç–æ—á–Ω—ã–π", "—É–ª. –°–∞–¥–æ–≤–∞—è, –¥. 30")
        ]
        cursor.executemany('INSERT INTO locations (district, address) VALUES (%s, %s)', locations)

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫—É—Ä—Å—ã, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    cursor.execute('SELECT COUNT(*) FROM courses')
    if cursor.fetchone()[0] == 0:
        courses = [
            ("–û—Å–Ω–æ–≤—ã –ª–æ–≥–∏–∫–∏ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è", "üß† –†–∞–∑–≤–∏–≤–∞–µ–º –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ –∏ –∏–∑—É—á–∞–µ–º –æ—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.", 6, 7),
            ("–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å", "üíª –û—Å–≤–æ–π—Ç–µ –æ—Å–Ω–æ–≤—ã —Ä–∞–±–æ—Ç—ã —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º.", 7, 9),
            ("–°–æ–∑–¥–∞–Ω–∏–µ –≤–µ–±-—Å–∞–π—Ç–æ–≤", "üåê –ù–∞—É—á–∏–º —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–µ–±-—Å–∞–π—Ç—ã —Å –Ω—É–ª—è.", 11, 13),
            ("–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω", "üé® –ö—É—Ä—Å –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –≥—Ä–∞—Ñ–∏–∫–∏ –∏ –¥–∏–∑–∞–π–Ω—É.", 9, 14),
            ("Python", "üêç –ò–∑—É—á–µ–Ω–∏–µ —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Python.", 12, 17)
        ]
        cursor.executemany('INSERT INTO courses (name, description, min_age, max_age) VALUES (%s, %s, %s, %s)', courses)

    conn.commit()
    conn.close()

def get_admin_ids():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ chat_id –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."""
    conn = get_connection()
    cursor = conn.cursor()
    cursor.execute('SELECT chat_id FROM admins')
    admins = [row[0] for row in cursor.fetchall()]
    conn.close()
    return admins

def add_admin(chat_id: int):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    conn = get_connection()
    cursor = conn.cursor()
    cursor.execute('INSERT INTO admins (chat_id) VALUES (%s)', (chat_id,))
    conn.commit()
    conn.close()

def get_locations():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ª–æ–∫–∞—Ü–∏–π."""
    conn = get_connection()
    cursor = conn.cursor()
    cursor.execute('SELECT id, district, address FROM locations')
    locations = cursor.fetchall()
    conn.close()
    return locations

def get_location_by_id(location_id: int):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–æ–∫–∞—Ü–∏–∏ –ø–æ ID."""
    conn = get_connection()
    cursor = conn.cursor()
    cursor.execute('SELECT district, address FROM locations WHERE id = %s', (location_id,))
    location = cursor.fetchone()
    conn.close()
    return location if location else None